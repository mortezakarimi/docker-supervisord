docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$Nexus_Username" -p "$Nexus_Password" $Nexus_Repository_Url
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$Nexus_Repository_Url/$CI_PROJECT_NAME${tag}" .
    - docker push "$Nexus_Repository_Url/$CI_PROJECT_NAME${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

docker-build-tags:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$Nexus_Username" -p "$Nexus_Password" $Nexus_Repository_Url
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build --pull -t "$Nexus_Repository_Url/$CI_PROJECT_NAME:$CI_COMMIT_TAG" .
    - docker push "$Nexus_Repository_Url/$CI_PROJECT_NAME:$CI_COMMIT_TAG"
  # Run this job in a branch where a Dockerfile exists
  only:
    # We want this job to be run on tags only.
    - tags
